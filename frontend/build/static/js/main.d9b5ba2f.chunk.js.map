{"version":3,"sources":["store/types.js","store/reducers.js","store/index.js","store/actions.js","components/Form.jsx","components/TasksList.jsx","App.js","reportWebVitals.js","index.js"],"names":["DONE_TODO","DEL_TODO","ADD_TODO","EDIT_TODO","ADD_ALL_TODOS","DEL_TEST","LOAD","ERROR","initialState","composeEnhancers","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","state","action","type","payload","filter","item","message","name","isLoaded","window","addEventListener","e","addTodoAC","task","doneTodoAC","delTodoAC","editTodoAC","delTestAC","loadAC","errorAC","thunkGetTasksfromDb","dispatch","a","getTasksfromDbErrorId","nanoid","fetch","method","response","json","id","status","thunkChangeStatus","currentTask","headers","body","JSON","stringify","console","log","thunkDeleteTask","Bounce","styled","div","keyframes","pulse","FormFunc","useDispatch","useState","input","setInput","taskNameDuplicateErrorId","todos","useSelector","edit","Container","style","divStyle","Form","onSubmit","event","preventDefault","every","elem","Error","thunkAddTask","Group","controlId","Control","placeholder","onChange","target","value","className","Text","Button","variant","onClick","WebkitTransition","msTransition","alignItems","height","Hinge","headShake","TasksList","saveNewTask","i","length","changeStatus","deleteTask","editTask","map","el","taskStyle","width","color","errStyle","InputGroup","FormControl","aria-label","aria-describedby","Append","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9b5ba2f.chunk.js","sourcesContent":["export const DONE_TODO = \"DONE_TODO\";\nexport const DEL_TODO = \"DEL_TODO\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const ADD_ALL_TODOS = \"ADD_ALL_TODOS\";\nexport const DEL_TEST = \"DEL_TEST\";\nexport const LOAD = \"LOAD\";\nexport const ERROR = \"ERROR\";\n","import { LOAD, ADD_TODO, DONE_TODO, DEL_TODO, EDIT_TODO, ADD_ALL_TODOS, DEL_TEST, ERROR } from './types'\n\nconst initialState = []\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n\n    case ADD_TODO:\n      return [...state, action.payload].filter(item => item.message !== 'This task name already exists');\n    \n    case DONE_TODO:\n      return [...action.payload].filter(item => item.message !== 'This task name already exists');\n\n    case DEL_TODO:\n      return [...action.payload].filter(item => item.message !== 'This task name already exists');\n    \n    case EDIT_TODO:\n      return [...state].filter(item => item.message !== 'This task name already exists');\n    \n    case ADD_ALL_TODOS:\n      return [...state, ...action.payload];\n    \n    case DEL_TEST:\n      return [...action.payload].filter(item => item.name !== 'test');\n    \n    case LOAD:\n      return [ ...state, action.payload ].filter(item => item.isLoaded !== false);\n    \n    case ERROR:\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducers } from './reducers'\nimport thunkMiddleware from 'redux-thunk'\n\nconst composeEnhancers = composeWithDevTools(applyMiddleware(thunkMiddleware)); // импорт reduxDevTools\n\nexport const store = createStore(reducers, composeEnhancers,);\n\nwindow.addEventListener(\"beforeunload\", function (e) {\n  })\n","import { ADD_TODO, DEL_TODO, DONE_TODO, EDIT_TODO, ADD_ALL_TODOS, DEL_TEST, LOAD, ERROR } from \"./types\";\nimport { nanoid } from 'nanoid'\n\nexport const addTodoAC = (task) => ({ type: ADD_TODO, payload: task });\n\nexport const addAllTodosAC = (task) => ({ type: ADD_ALL_TODOS, payload: task });\n\nexport const doneTodoAC = (task) => ({ type: DONE_TODO, payload: task});\n\nexport const delTodoAC = (task) => ({ type: DEL_TODO, payload: task });\n\nexport const editTodoAC = () => ({ type: EDIT_TODO });\n\nexport const delTestAC = (task) => ({ type: DEL_TEST, payload: task });\n\nexport const loadAC = (task) => ({ type: LOAD, payload: task });\n\nexport const errorAC = (e) => ({ type: ERROR, payload: e });\n\nexport const thunkAddTask = (currentTask) => async (dispatch) => { \n\n  let getTasksfromDbErrorId = nanoid()\n  \n  try {\n\n    const response = await fetch(`/task`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(currentTask),\n    });\n          \n    let task = await response.json();\n    dispatch(loadAC(task));\n     } catch (err) {\n    console.log('Error message:', { id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true });\n    dispatch(errorAC({ id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true }))\n  }\n}\n  \nexport const thunkGetTasksfromDb = () => async (dispatch) => {\n  let getTasksfromDbErrorId = nanoid()\n\n  try {\n\n    const response = await fetch('/task', {\n      method: 'GET',\n    });\n    const task = await response.json();\n    dispatch(delTestAC(task));\n  } catch (err) {\n    dispatch(errorAC({ id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true }))\n  }\n}\n\nexport const thunkChangeStatus = (currentTask) => async (dispatch) => {\n  let getTasksfromDbErrorId = nanoid()\n  \n  try {\n\n    const response = await fetch(`/task/changeStatus`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(currentTask),\n    });\n    const task = await response.json();\n    dispatch(doneTodoAC(task));\n  } catch (err) {\n    console.log('Error message:', { id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true });\n    dispatch(errorAC({ id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true }))\n  }\n}\n\nexport const thunkDeleteTask = (currentTask) => async (dispatch) => {\n  let getTasksfromDbErrorId = nanoid()\n\n  try {\n\n    const response = await fetch(`/task/delete`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(currentTask),\n    });\n     \n    const task = await response.json();\n    dispatch(delTodoAC(task));\n\n  } catch (err) {\n    console.log('Error message:', { id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true });\n    dispatch(errorAC({ id: getTasksfromDbErrorId, message: '400 Bad Request ', status: false, isLoaded: true }))\n  }\n}\n","import React, { useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodoAC } from \"../store/actions\";\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button';\nimport { nanoid } from 'nanoid'\nimport { thunkGetTasksfromDb } from \"../store/actions\";\nimport { thunkAddTask } from \"../store/actions\";\nimport { pulse } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\nimport { errorAC } from \"../store/actions\";\n\nconst Bounce = styled.div`animation: 2s ${keyframes`${pulse}`} infinite`;\n\nfunction FormFunc() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('')\n  let taskNameDuplicateErrorId = nanoid()\n  // let getTasksfromDbErrorId = nanoid()\n  const todos = useSelector((store) => store);\n\n  const onSubmitHandler = (event) => { \n  event.preventDefault(event)\n  \n    try {\n    let currentTask = {\n      id: nanoid(),\n      name: input,\n      status: false,\n      edit: false,\n      isLoaded: false, \n      message: ''\n    }\n\n    let condition = todos.every(elem => elem.name !== input);\n\n        if (condition) {\n    \n          dispatch(addTodoAC(currentTask));\n          setInput('')\n          dispatch(thunkAddTask(currentTask));\n          \n          } else {\n          throw new Error([\"This task name already exists\"]);\n        }\n      } catch (e) {\n      dispatch(errorAC({ id: taskNameDuplicateErrorId, message: e.message, status: false, isLoaded: true }))\n      }\n  }\n\n  async function getTasksfromDb() {\n\n    let currentTask = {\n      id: nanoid(),\n      name: 'test',\n      status: false,\n      edit: false,\n      isLoaded: false, \n      message: ''\n    }\n\n    dispatch(addTodoAC(currentTask));  \n    dispatch(thunkGetTasksfromDb()); \n    };\n\n  return (\n  <Container style={divStyle}>\n  <Bounce >\n  <h2>To Do App</h2>\n  </Bounce>\n  <Form onSubmit={onSubmitHandler}>\n  <Form.Group controlId=\"formBasicEmail\">\n  <Form.Control placeholder=\"Enter task name here\" onChange={(event) => setInput(event.target.value)}\n    name=\"name\" type=\"text\" value={input} className=\"text-muted\" />\n  <Form.Text  >\n  </Form.Text>\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Add task\n  </Button>{' '}\n  <Button variant=\"primary\" onClick={getTasksfromDb}  >\n    See all tasks\n  </Button>\n  </Form>\n  </Container>\n  );\n}\n\nexport default FormFunc;\n\nconst divStyle = {\n  WebkitTransition: 'all',\n  msTransition: 'all',\n  alignItems: 'center',\n  height: '180px',\n};\n","import React, { useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport Container from 'react-bootstrap/Container'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { editTodoAC } from \"../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { thunkDeleteTask } from \"../store/actions\";\nimport { thunkChangeStatus } from \"../store/actions\";\nimport { errorAC } from \"../store/actions\";\nimport styled, { keyframes } from 'styled-components';\nimport { headShake} from 'react-animations';\nimport { pulse} from 'react-animations';\nimport Image from 'react-random-image'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport { nanoid } from 'nanoid'\nconst Hinge = styled.div`animation: 2s ${keyframes`${headShake}`} infinite`;\nconst Bounce = styled.div`animation: 2s ${keyframes`${pulse}`} infinite`;\n\nconst TasksList = () => {\n  const todos = useSelector((store) => store);\n  const [input, setInput] = useState('')\n  const dispatch = useDispatch();\n  let taskNameDuplicateErrorId = nanoid()\n\n  const saveNewTask = async (id, name) => {\n\n    try {\n      \n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n\n        let condition = todos.every(elem => elem.name !== name);\n\n        if (condition) {\n          \n        todos[i].name = name;\n        todos[i].edit = false;\n        todos[i].message = '';\n        dispatch(editTodoAC(todos[i]));\n\n       await fetch(`task/edit`, {\n       method: 'POST',\n       headers: {\n      'Content-Type': 'application/json'\n       },\n        body: JSON.stringify(todos[i]),\n       });\n        } else {\n          throw new Error([\"This task name already exists\"]);\n        }\n      } \n    }\n    } catch (e) {\n      console.log('Error message:', { id: taskNameDuplicateErrorId, message: e.message, status: false, isLoaded: true } );\n      dispatch(errorAC({ id: taskNameDuplicateErrorId, message: e.message, status: false, isLoaded: true }))\n      }\n  };\n\n  const changeStatus = async (id) => {\n    let currentTask;\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        currentTask = todos[i]\n      }\n    }\n    dispatch(thunkChangeStatus(currentTask));\n  }\n\n  const deleteTask = async (id) => {\n    let currentTask \n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n      currentTask = todos[i]\n      }\n    }\n      dispatch(thunkDeleteTask(currentTask));\n  }\n\n  const editTask = (id) => {\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].id === id) {\n        todos[i].edit = true;\n      } \n    }\n    dispatch(editTodoAC(todos));\n  };\n\n  return (\n    <Container style={divStyle}>\n      <h3>{todos.length !== 0 && todos.map((el) => {\n        \n        return el.message === '' ? \n        el.name !== 'test' ?\n        el.status === false ?\n          (<Bounce key={el.id}>\n            <div style={taskStyle} key={el.id}>\n                {!el.isLoaded ?\n                  <Loader key={el.id} type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} /> :\n\n                  <div style={taskStyle} key={el.id}>\n                    <Image width={50} height={50} />{' '}\n                    {el.name}{' '}\n                    <Button onClick={() => changeStatus(el.id)} variant=\"primary\">Resolve task\n              </Button>{' '}\n                    <Button onClick={() => deleteTask(el.id)} variant=\"primary\">Delete\n              </Button>{' '}\n                    <Button onClick={() => editTask(el.id)} variant=\"primary\">Edit\n              </Button>\n                  </div>\n                }\n            </div>\n          </Bounce>) :\n          (<Hinge key={el.id}>\n            <div style={taskStyle} key={el.id}>\n                {\n              !el.isLoaded ?\n                    <Loader key={el.id} type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} /> : \n              <div style={taskStyle} key={el.id}>      \n              <s>{el.name}</s>{' '}\n              <Button onClick={() => changeStatus(el.id)} variant=\"primary\">Resolve task\n              </Button>{' '}\n              <Button onClick={() => deleteTask(el.id)} variant=\"primary\">Delete\n              </Button>{' '}\n              <Button onClick={() => editTask(el.id)} variant=\"primary\">Edit\n              </Button>{' '}\n              </div>\n              }\n            </div>\n          </Hinge>)\n            : <Loader key={el.id} type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n          :\n          <div style={errStyle} key={el.id}>\n            {el.message}\n          </div>\n          }\n      )}{' '}\n        \n      </h3>\n      \n      {todos.length !== 0 && todos.map((el) => {\n           \n        return el.edit === true ? (\n          <InputGroup key={el.id} className=\"mb-3\" >\n          <FormControl \n          onChange={(event) => setInput(event.target.value)}\n          placeholder=\"Enter new task name\"\n          aria-label=\"Enter new task name\"\n          aria-describedby=\"basic-addon2\"\n          />\n          <InputGroup.Append>\n          <Button onClick={() => saveNewTask(el.id, input)} variant=\"primary\">Save new task name</Button>\n          </InputGroup.Append>\n          </InputGroup>\n          ) : ''})}\n        \n    </Container>\n  );\n}\n\nexport default TasksList\n\nconst divStyle = {\n  WebkitTransition: 'all',\n  msTransition: 'all',\n  height: '100px',\n};\n\nconst errStyle = {\n  WebkitTransition: 'all',\n  msTransition: 'all',\n  fontSize: '20px',\n  color: 'red'\n};\n\nconst taskStyle = {\n  WebkitTransition: 'all',\n  msTransition: 'all',\n  height: '100px',\n};\n","import './App.css';\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\nimport FormFunc from './components/Form'\nimport TasksList from './components/TasksList'\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <FormFunc />\n      <TasksList />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}